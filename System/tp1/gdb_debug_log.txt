Breakpoint 1, mini_itoa (a=0) at mini_string.c:116
116	{
(gdb) s
117	    int digits = 0;
(gdb) 
118	    int _a = a;
(gdb) 
119	    while (_a != 0)
(gdb) 
121	        _a = _a / 10;
(gdb) 
122	        digits++;
(gdb) 
119	    while (_a != 0)
(gdb) 
124	    char *returning = mini_malloc(sizeof(char) * (digits + 1));
(gdb) 
mini_malloc (size=0) at mini_memory.c:37
37	{
(gdb) 
40	    if (malloc_list)
(gdb) 
60	        bloc = cree_mem_os(NULL, size);
(gdb) 
cree_mem_os (last=0x34000000340, size=832) at mini_memory.c:18
18	{
(gdb) 
20	    block = sbrk(0);
(gdb) 
__GI___sbrk (increment=0) at sbrk.c:32
32	sbrk.c: No such file or directory.
(gdb) 
40	in sbrk.c
(gdb) 
41	in sbrk.c
(gdb) 
__brk (addr=addr@entry=0x0) at ../sysdeps/unix/sysv/linux/x86_64/brk.c:28
28	../sysdeps/unix/sysv/linux/x86_64/brk.c: No such file or directory.
(gdb) 
31	in ../sysdeps/unix/sysv/linux/x86_64/brk.c
(gdb) 
33	in ../sysdeps/unix/sysv/linux/x86_64/brk.c
(gdb) 
__GI___sbrk (increment=0) at sbrk.c:44
44	sbrk.c: No such file or directory.
(gdb) 
cree_mem_os (last=0x0, size=2) at mini_memory.c:22
22	    if (sbrk(size + DATA_SIZE) == (void *)-1)
(gdb) 
__GI___sbrk (increment=26) at sbrk.c:32
32	sbrk.c: No such file or directory.
(gdb) 
40	in sbrk.c
(gdb) 
44	in sbrk.c
(gdb) 
31	in sbrk.c
(gdb) 
__GI___sbrk (increment=26) at sbrk.c:48
48	in sbrk.c
(gdb) 
56	in sbrk.c
(gdb) 
__brk (addr=addr@entry=0x55555555a01a) at ../sysdeps/unix/sysv/linux/x86_64/brk.c:28
28	../sysdeps/unix/sysv/linux/x86_64/brk.c: No such file or directory.
(gdb) 
31	in ../sysdeps/unix/sysv/linux/x86_64/brk.c
(gdb) 
33	in ../sysdeps/unix/sysv/linux/x86_64/brk.c
(gdb) 
cree_mem_os (last=0x0, size=2) at mini_memory.c:22
22	    if (sbrk(size + DATA_SIZE) == (void *)-1)
(gdb) 
27	    block->taille = size;
(gdb) 
28	    block->next_malloc = NULL;
(gdb) 
29	    block->statut = 1;
(gdb) 
30	    if (last)
(gdb) 
34	    return block;
(gdb) 
35	}
(gdb) 
mini_malloc (size=2) at mini_memory.c:61
61	        if (!bloc)
(gdb) 
66	        malloc_list = bloc;
(gdb) 
70	    return (bloc + 1);
(gdb) 
71	}
(gdb) 
mini_itoa (a=1) at mini_string.c:126
126	    *(returning + digits) = '\0';
(gdb) 
127	    for (int i = 0; a != 0; i++)
(gdb) 
129	        int temp = a % 10;
(gdb) 
130	        *(returning + digits - (i + 1)) = (char)(temp + 48);
(gdb) 
131	        a = a / 10;
(gdb) 
127	    for (int i = 0; a != 0; i++)
(gdb) 
133	    return returning;
(gdb) 
134	}
(gdb) 
main (argc=1, argv=0x7fffffffdf38) at main.c:60
60	    mini_printf(ptr);
(gdb) print ptr
$1 = 0x55555555a018 "1"
(gdb) s
mini_printf (msg=0x1 <error: Cannot access memory at address 0x1>) at mini_string.c:7
7	{
(gdb) print msg
$2 = 0x1 <error: Cannot access memory at address 0x1>
(gdb) print a
No symbol "a" in current context.
(gdb) 
No symbol "a" in current context.
(gdb) s
8	    if (ind == -1)
(gdb) print ptr
No symbol "ptr" in current context.
(gdb) print msg
$3 = 0x55555555a018 "1"
(gdb) s
10	        buffer = mini_calloc(sizeof(char), BUF_SIZE);
(gdb) 
mini_calloc (size_ele=1871615429, nombre_ele=-376520448) at mini_memory.c:74
74	{
(gdb) 
76	    p = mini_malloc(size_ele * nombre_ele);
(gdb) 
mini_malloc (size=21845) at mini_memory.c:37
37	{
(gdb) 
40	    if (malloc_list)
(gdb) 
42	        last = malloc_list;
(gdb) 
43	        bloc = trouver_bloc_libre(&last, size);
(gdb) 
trouver_bloc_libre (last=0x7fffffffdd70, size=21845) at mini_memory.c:7
7	{
(gdb) 
8	    malloc_element *current = malloc_list;
(gdb) 
9	    while (current && (current->statut != 0 && current->taille >= size))
(gdb) 
14	    return current;
(gdb) 
15	}
(gdb) 
mini_malloc (size=1024) at mini_memory.c:44
44	        if (bloc)
(gdb) 
46	            bloc->statut = 0;
(gdb) 
70	    return (bloc + 1);
(gdb) 
71	}
(gdb) 
mini_calloc (size_ele=1, nombre_ele=1024) at mini_memory.c:77
77	    if (!p)
(gdb) print p
$4 = (void *) 0x55555555a018
(gdb) 
$5 = (void *) 0x55555555a018
(gdb) s
79	    bzero(p, size_ele * nombre_ele);
(gdb) print p
$6 = (void *) 0x55555555a018
(gdb) print *p
Attempt to dereference a generic pointer.
(gdb) s
[Inferior 1 (process 18906) exited normally]
(gdb) 
The program is not being run.
